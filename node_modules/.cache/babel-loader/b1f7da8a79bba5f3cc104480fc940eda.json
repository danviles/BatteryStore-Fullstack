{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rhoudax\\\\Documents\\\\GCO\\\\p2\\\\E08\\\\src\\\\context\\\\tienda\\\\tiendaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TiendaContex from './tiendaContext';\nimport TiendaReducer from './tiendaReducer';\nimport clienteAxios from '../../config/axios'; //import { v4 as uuid } from \"uuid\";\n\nimport { COMPRA_BATERIA, TIENDA_BATERIAS, TIENDA_COMPRA, COMPRA_ERROR, MENSAJE_TIENDA } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TiendaState = props => {\n  _s();\n\n  const initialState = {\n    bateriasventa: [],\n    bateriacompra: null,\n    cargando: false,\n    mensaje: ''\n  }; //Dispatch para ejecutar acciones\n\n  const [state, dispatch] = useReducer(TiendaReducer, initialState);\n\n  const obtenerBateriasVenta = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/Tienda');\n      dispatch({\n        type: TIENDA_BATERIAS,\n        payload: resultado.data.baterias\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const obtenerBateriaID = async id => {\n    try {\n      const resultado = await clienteAxios.get(`/api/tienda/item/${id}`);\n      dispatch({\n        type: TIENDA_COMPRA,\n        payload: resultado.data.bateria\n      });\n    } catch (error) {\n      const mensaje = {\n        msg: 'La bateria no existe.',\n        tipo: 'error-mensaje'\n      };\n      dispatch({\n        type: MENSAJE_TIENDA,\n        payload: mensaje\n      });\n    }\n  };\n\n  const comprarBateria = async id => {\n    try {\n      const resultado = await clienteAxios.delete(`/api/tienda/comprar/${id}`);\n      const mensaje = {\n        msg: 'Gracias por tu compra.',\n        tipo: 'success-mensaje'\n      };\n      dispatch({\n        type: COMPRA_BATERIA,\n        payload: mensaje\n      });\n    } catch (error) {\n      const mensaje = {\n        msg: 'Hubo un error en la compra, intentalo mas tarde',\n        tipo: 'error-mensaje'\n      };\n      dispatch({\n        type: COMPRA_ERROR,\n        payload: mensaje\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TiendaContex.Provider, {\n    value: {\n      bateriasventa: state.bateriasventa,\n      bateriacompra: state.bateriacompra,\n      cargando: state.cargando,\n      mensaje: state.mensaje,\n      obtenerBateriasVenta,\n      obtenerBateriaID,\n      comprarBateria\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TiendaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TiendaState;\nexport default TiendaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiendaState\");","map":{"version":3,"sources":["C:/Users/Rhoudax/Documents/GCO/p2/E08/src/context/tienda/tiendaState.js"],"names":["React","useReducer","TiendaContex","TiendaReducer","clienteAxios","COMPRA_BATERIA","TIENDA_BATERIAS","TIENDA_COMPRA","COMPRA_ERROR","MENSAJE_TIENDA","TiendaState","props","initialState","bateriasventa","bateriacompra","cargando","mensaje","state","dispatch","obtenerBateriasVenta","resultado","get","type","payload","data","baterias","error","console","log","obtenerBateriaID","id","bateria","msg","tipo","comprarBateria","delete","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport TiendaContex from './tiendaContext';\r\nimport TiendaReducer from './tiendaReducer';\r\nimport clienteAxios from '../../config/axios';\r\n//import { v4 as uuid } from \"uuid\";\r\n\r\nimport {\r\n    COMPRA_BATERIA,\r\n    TIENDA_BATERIAS,\r\n    TIENDA_COMPRA,\r\n    COMPRA_ERROR,\r\n    MENSAJE_TIENDA\r\n} from \"../../types\";\r\n\r\nconst TiendaState = props => {\r\n\r\n\r\n    const initialState = {\r\n        bateriasventa : [],\r\n        bateriacompra : null,\r\n        cargando: false,\r\n        mensaje: ''\r\n    }\r\n\r\n    //Dispatch para ejecutar acciones\r\n    const [state, dispatch] = useReducer(TiendaReducer, initialState)\r\n\r\n    const obtenerBateriasVenta = (async () => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/Tienda');  \r\n            dispatch({\r\n                type: TIENDA_BATERIAS,\r\n                payload: resultado.data.baterias\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    })\r\n\r\n    const obtenerBateriaID = (async (id) => {\r\n        try {\r\n            const resultado = await clienteAxios.get(`/api/tienda/item/${id}`);  \r\n            dispatch({\r\n                type: TIENDA_COMPRA,\r\n                payload: resultado.data.bateria\r\n            })\r\n        } catch (error) {\r\n            const mensaje = {\r\n                msg: 'La bateria no existe.',\r\n                tipo: 'error-mensaje'\r\n            }\r\n            dispatch({\r\n                type: MENSAJE_TIENDA,\r\n                payload: mensaje\r\n            })\r\n        }\r\n    })\r\n\r\n    const comprarBateria = (async (id) => {\r\n        try {\r\n            const resultado = await clienteAxios.delete(`/api/tienda/comprar/${id}`);  \r\n            const mensaje = {\r\n                msg: 'Gracias por tu compra.',\r\n                tipo: 'success-mensaje'\r\n            }\r\n            dispatch({\r\n                type: COMPRA_BATERIA,\r\n                payload: mensaje\r\n            })\r\n        } catch (error) {\r\n            const mensaje = {\r\n                msg: 'Hubo un error en la compra, intentalo mas tarde',\r\n                tipo: 'error-mensaje'\r\n            }\r\n            dispatch({\r\n                type: COMPRA_ERROR,\r\n                payload: mensaje\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <TiendaContex.Provider\r\n            value={{\r\n                bateriasventa: state.bateriasventa,\r\n                bateriacompra: state.bateriacompra,\r\n                cargando: state.cargando,\r\n                mensaje: state.mensaje,\r\n                obtenerBateriasVenta,\r\n                obtenerBateriaID,\r\n                comprarBateria\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TiendaContex.Provider>\r\n    )\r\n}\r\n\r\nexport default TiendaState;"]},"metadata":{},"sourceType":"module"}